{"version":3,"sources":["redux/constants.js","redux/reducers.js","redux/store.js","components/button.js","components/countdown.js","redux/actions.js","components/countdown-animation.js","components/random-quote.js","components/set-pomodoro.js","App.js","index.js","components/countdown-animation.module.css","components/set-pomodoro.module.css"],"names":["constants","SET_TIMER","START_SHORT_BREAK","START_LONG_BREAK","START_POMODORO","PAUSE_POMODORO","STOP_TIMER","RESUME_TIMER","initialState","duration","shortBreak","longBreak","active","animate","streak","activeDuration","pomodoroReducer","prevState","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","logger","Button","props","className","styles","activeClass","onClick","callback","title","Countdown","console","log","dispatch","useDispatch","timerStore","useSelector","state","isPlaying","colors","strokeWidth","size","trailColor","onComplete","remainingTime","parseInt","key","CountdownAnimation","buttonWrapper","e","preventDefault","buttonGroup","RandomQuote","useState","quote","setQuote","useEffect","a","fetch","response","json","data","randomIndex","Math","floor","random","length","getQuote","text","author","SetPomodoro","timer","setTimer","handleChange","event","target","name","value","input","onChange","defaultValue","setShowSetTimer","setTimerStore","App","showSetTimer","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"gMAUeA,EAVG,CACjBC,UAAW,YACXC,kBAAmB,oBACnBC,iBAAkB,mBAClBC,eAAgB,iBAChBC,eAAgB,iBAChBC,WAAY,aACZC,aAAc,gBCLTC,EAAe,CACpBC,SAAU,GACVC,WAAY,EACZC,UAAW,GACXC,OAAQ,WACRC,SAAS,EACTC,OAAQ,EACRC,eAAgB,IAoFFC,EAjFS,WAAuC,IAAtCC,EAAqC,uDAAzBT,EAAcU,EAAW,uCAC7D,OAAQA,EAAOC,MACd,KAAKnB,EAAUC,UACd,OAAO,2BACHgB,GADJ,IAECR,SAAUS,EAAOE,QAAP,SACVV,WAAYQ,EAAOE,QAAP,WACZT,UAAWO,EAAOE,QAAP,YAEb,KAAKpB,EAAUI,eACd,OAAO,2BACHa,GADJ,IAECJ,SAAS,EACTD,OAAQ,WACRG,eAAgBE,EAAS,WAE3B,KAAKjB,EAAUG,iBACd,OAAO,2BACHc,GADJ,IAECL,OAAQ,YACRC,SAAS,EACTE,eAAgBE,EAAS,YAE3B,KAAKjB,EAAUE,kBACd,OAAO,2BACHe,GADJ,IAECL,OAAQ,aACRC,SAAS,EACTE,eAAgBE,EAAS,aAE3B,KAAKjB,EAAUM,WACd,OAAQW,EAAUL,QACjB,IAAK,YAML,IAAK,aACJ,OAAO,2BACHK,GADJ,IAECL,OAAQ,WACRC,SAAS,IAEX,IAAK,WACJ,IAAIC,EAASG,EAAUH,OAEvB,OADAA,GAAU,GACG,IAAM,EACX,2BACHG,GADJ,IAECL,OAAQ,YACRC,SAAS,KAGI,IAAXC,IAAcA,EAAS,GACpB,2BACHG,GADJ,IAECL,OAAQ,aACRC,SAAS,KAEX,QACC,OAAO,eACHI,GAIP,KAAKjB,EAAUK,eACd,OAAO,2BACHY,GADJ,IAECJ,SAAS,IAEX,KAAKb,EAAUO,aACd,OAAO,2BACHU,GADJ,IAECJ,SAAS,IAEX,QACC,OAAOI,I,QC/EKI,EALDC,sBACbN,EACAO,8BAAoBC,0BAAgBC,O,8BCGtBC,EARA,SAACC,GACf,OACC,wBAAQC,UAAWC,IAAOF,EAAMG,aAAcC,QAASJ,EAAMK,SAA7D,SACEL,EAAMM,S,QCAK,SAASC,EAAUP,GACjCQ,QAAQC,IAAIT,EAAMlB,UAClB,IAAM4B,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,KAC1C,OACC,cAAC,uBAAD,CACCC,UAAWH,EAAU,QACrB9B,SAA2B,GAAjBkB,EAAMlB,SAEhBkC,OAAQ,CACP,CAAC,UAAW,KACZ,CAAC,UAAW,KACZ,CAAC,UAAW,MAEbC,YAAa,EACbC,KAAM,IACNC,WAAW,UACXC,WAAY,WACXV,ECPI,CACNlB,KAAMnB,EAAUM,cDPhB,SAiBE,YAAwB,IAArB0C,EAAoB,EAApBA,cACH,OACCC,SAASD,EAAgB,IAAM,IAAOA,EAAgB,KAhBnDrB,EAAMuB,KEyECC,MAtEf,SAA4BxB,GAC3BQ,QAAQC,IAAIT,EAAMlB,UAClB,IAAM4B,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,KA2B1C,OACC,eAAC,WAAD,WACC,sBAAKb,UAAWC,IAAOuB,cAAvB,UACC,cAAC,EAAD,CACCtB,YACuB,aAAtBS,EAAW3B,OAAwB,SAAW,GAE/CqB,MAAM,iBACND,SAvBwB,SAACqB,GAC5BA,EAAEC,iBACFjB,EDvBM,CACNlB,KAAMnB,EAAUI,oBC6Cd,cAAC,EAAD,CACC0B,YACuB,eAAtBS,EAAW3B,OAA0B,SAAW,GAEjDqB,MAAM,oBACND,SAzB0B,SAACqB,GAC9BA,EAAEC,iBACFjB,EDEM,CACNlB,KAAMnB,EAAUE,uBCsBd,cAAC,EAAD,CACC4B,YACuB,cAAtBS,EAAW3B,OAAyB,SAAW,GAEhDqB,MAAM,mBACND,SA3ByB,SAACqB,GAC7BA,EAAEC,iBACFjB,EDTM,CACNlB,KAAMnB,EAAUG,yBCoCf,qBAAKyB,UAAWC,IAAO,qBAAvB,SACC,cAACK,EAAD,CAECzB,SAAU8B,EAAWxB,eACrBF,QAAS0B,EAAW1B,SAFf0B,EAAWxB,kBAKlB,sBAAKa,UAAWC,IAAO0B,YAAvB,UACC,cAAC,EAAD,CAAQtB,MAAM,cAAcD,SA1DN,SAACqB,GACzBA,EAAEC,iBACFjB,EDDM,CACNlB,KAAMnB,EAAUK,oBCyDd,cAAC,EAAD,CAAQ4B,MAAM,eAAeD,SAtDN,SAACqB,GAC1BA,EAAEC,iBACFjB,EDAM,CACNlB,KAAMnB,EAAUO,yB,yBEGHiD,EA9BK,WACnB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,qBAAU,YACK,uCAAG,gCAAAC,EAAA,sEACOC,MAAM,+BADb,cACVC,EADU,gBAGGA,EAASC,OAHZ,OAGVC,EAHU,OAKVC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAEpDX,EAASM,EAAKC,IAPE,2CAAH,qDAUdK,KACE,IAGQ,OAAVb,EACC,gCACC,4BAAIA,EAAMc,OACV,uCAAUd,EAAMe,aAGjB,yB,gBCiDYC,EAnEK,SAAC/C,GACpB,IAAMU,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,KAE1C,EAA0BgB,mBAASlB,GAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAACC,GACrB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACP,IAAK,WACJJ,EAAS,2BACLD,GADI,IAEPlE,SAAUwC,SAASgC,MAEpB,MACD,IAAK,aACJL,EAAS,2BACLD,GADI,IAEPjE,WAAYuC,SAASgC,MAEtB,MACD,IAAK,YACJL,EAAS,2BACLD,GADI,IAEPhE,UAAWsC,SAASgC,QAcxB,OACC,8BACC,uBAAMrD,UAAWC,IAAO,kBAAxB,UACC,sBAAKD,UAAWC,IAAO,iBAAvB,UACC,uBACCD,UAAWC,IAAOqD,MAClBF,KAAK,WACLG,SAAUN,EACVO,aAAcT,EAAMlE,WAErB,uBACCmB,UAAWC,IAAOqD,MAClBF,KAAK,aACLG,SAAUN,EACVO,aAAcT,EAAMjE,aAErB,uBACCkB,UAAWC,IAAOqD,MAClBF,KAAK,YACLG,SAAUN,EACVO,aAAcT,EAAMhE,eAGtB,cAAC,EAAD,CAAQsB,MAAM,YAAYD,SA7BR,SAACqB,GACrBA,EAAEC,iBACF3B,EAAM0D,iBAAgB,GACtBhD,EHzC2B,SAACsC,GAC7B,MAAO,CACNxD,KAAMnB,EAAUC,UAChBmB,QAASuD,GGsCAW,CAAcX,aCLVY,MA9Bf,WACC,IAAM1E,EAAU2B,aAAY,SAACC,GAAD,OAAWA,EAAM5B,WACvC8D,EAAQnC,aAAY,SAACC,GAAD,OAAWA,KACrC,EAAwCgB,oBAAS,GAAjD,mBAAO+B,EAAP,KAAqBH,EAArB,KAEA,OACC,sBAAKzD,UAAU,YAAf,UACC,sCACA,cAAC,EAAD,IACC4D,GAAgB,cAAC,EAAD,CAAaH,gBAAiBA,KAC7CG,GACD,cAAC,EAAD,CAEC/E,SAAUkE,EAAM5D,eAChBF,QAASA,GAFJ,IAKL2E,GACD,cAAC,EAAD,CACC1D,YAAY,UACZG,MAAM,aACND,SAAU,WACTqD,GAAgB,UCrBhBI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFoE,I,kBCbFK,EAAOC,QAAU,CAAC,oBAAoB,+CAA+C,cAAgB,2CAA2C,YAAc,yCAAyC,QAAU,qCAAqC,OAAS,sC,kBCA/PD,EAAOC,QAAU,CAAC,iBAAiB,qCAAqC,gBAAgB,oCAAoC,MAAQ,+B","file":"static/js/main.8c5ff742.chunk.js","sourcesContent":["const constants = {\r\n\tSET_TIMER: \"set_timer\",\r\n\tSTART_SHORT_BREAK: \"start_short_break\",\r\n\tSTART_LONG_BREAK: \"start_long_break\",\r\n\tSTART_POMODORO: \"start_pomodoro\",\r\n\tPAUSE_POMODORO: \"pause_pomodoro\",\r\n\tSTOP_TIMER: \"stop_timer\",\r\n\tRESUME_TIMER: \"resume_timer\",\r\n};\r\n\r\nexport default constants;\r\n","import constants from \"./constants\";\r\n\r\nconst initialState = {\r\n\tduration: 25,\r\n\tshortBreak: 5,\r\n\tlongBreak: 15,\r\n\tactive: \"duration\",\r\n\tanimate: false,\r\n\tstreak: 0,\r\n\tactiveDuration: 25,\r\n};\r\n\r\nconst pomodoroReducer = (prevState = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase constants.SET_TIMER:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tduration: action.payload[\"duration\"],\r\n\t\t\t\tshortBreak: action.payload[\"shortBreak\"],\r\n\t\t\t\tlongBreak: action.payload[\"longBreak\"],\r\n\t\t\t};\r\n\t\tcase constants.START_POMODORO:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tanimate: true,\r\n\t\t\t\tactive: \"duration\",\r\n\t\t\t\tactiveDuration: prevState[\"duration\"],\r\n\t\t\t};\r\n\t\tcase constants.START_LONG_BREAK:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tactive: \"longBreak\",\r\n\t\t\t\tanimate: true,\r\n\t\t\t\tactiveDuration: prevState[\"longBreak\"],\r\n\t\t\t};\r\n\t\tcase constants.START_SHORT_BREAK:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tactive: \"shortBreak\",\r\n\t\t\t\tanimate: true,\r\n\t\t\t\tactiveDuration: prevState[\"shortBreak\"],\r\n\t\t\t};\r\n\t\tcase constants.STOP_TIMER:\r\n\t\t\tswitch (prevState.active) {\r\n\t\t\t\tcase \"longBreak\":\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tactive: \"duration\",\r\n\t\t\t\t\t\tanimate: true,\r\n\t\t\t\t\t};\r\n\t\t\t\tcase \"shortBreak\":\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tactive: \"duration\",\r\n\t\t\t\t\t\tanimate: true,\r\n\t\t\t\t\t};\r\n\t\t\t\tcase \"duration\":\r\n\t\t\t\t\tvar streak = prevState.streak;\r\n\t\t\t\t\tstreak += 1;\r\n\t\t\t\t\tif (streak % 3 === 0) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\t\tactive: \"longBreak\",\r\n\t\t\t\t\t\t\tanimate: false,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (streak === 4) streak = 0;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tactive: \"shortBreak\",\r\n\t\t\t\t\t\tanimate: true,\r\n\t\t\t\t\t};\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\tcase constants.PAUSE_POMODORO:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tanimate: false,\r\n\t\t\t};\r\n\t\tcase constants.RESUME_TIMER:\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\tanimate: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn prevState;\r\n\t}\r\n};\r\n\r\nexport default pomodoroReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport pomodoroReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n\tpomodoroReducer,\r\n\tcomposeWithDevTools(applyMiddleware(logger)),\r\n);\r\n\r\nexport default store;\r\n","import styles from \"./countdown-animation.module.css\";\r\n\r\nconst Button = (props) => {\r\n\treturn (\r\n\t\t<button className={styles[props.activeClass]} onClick={props.callback}>\r\n\t\t\t{props.title}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { stopPomodoro } from \"../redux/actions\";\r\n\r\nexport default function Countdown(props) {\r\n\tconsole.log(props.duration);\r\n\tconst dispatch = useDispatch();\r\n\tconst timerStore = useSelector((state) => state);\r\n\treturn (\r\n\t\t<CountdownCircleTimer\r\n\t\t\tisPlaying={timerStore[\"animate\"]}\r\n\t\t\tduration={props.duration * 60}\r\n\t\t\tkey={props.key}\r\n\t\t\tcolors={[\r\n\t\t\t\t[\"#FE6F6B\", 0.33],\r\n\t\t\t\t[\"#FE6F6B\", 0.33],\r\n\t\t\t\t[\"#FE6F6B\", 0.33],\r\n\t\t\t]}\r\n\t\t\tstrokeWidth={6}\r\n\t\t\tsize={200}\r\n\t\t\ttrailColor=\"#151932\"\r\n\t\t\tonComplete={() => {\r\n\t\t\t\tdispatch(stopPomodoro());\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{/* {props.children} */}\r\n\t\t\t{({ remainingTime }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tparseInt(remainingTime / 60) + \":\" + (remainingTime % 60)\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</CountdownCircleTimer>\r\n\t);\r\n}\r\n","import constants from \"./constants\";\r\n\r\nexport const setTimerStore = (timer) => {\r\n\treturn {\r\n\t\ttype: constants.SET_TIMER,\r\n\t\tpayload: timer,\r\n\t};\r\n};\r\n\r\nexport const startPomodoro = () => {\r\n\treturn {\r\n\t\ttype: constants.START_POMODORO,\r\n\t};\r\n};\r\n\r\nexport const stopPomodoro = () => {\r\n\treturn {\r\n\t\ttype: constants.STOP_TIMER,\r\n\t};\r\n};\r\n\r\nexport const pausePomodoro = () => {\r\n\treturn {\r\n\t\ttype: constants.PAUSE_POMODORO,\r\n\t};\r\n};\r\n\r\nexport const resumePomodoro = () => {\r\n\treturn {\r\n\t\ttype: constants.RESUME_TIMER,\r\n\t};\r\n};\r\n\r\nexport const startLongBreak = () => {\r\n\treturn {\r\n\t\ttype: constants.START_LONG_BREAK,\r\n\t};\r\n};\r\n\r\nexport const startShortBreak = () => {\r\n\treturn {\r\n\t\ttype: constants.START_SHORT_BREAK,\r\n\t};\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n\tpausePomodoro,\r\n\tresumePomodoro,\r\n\tstartLongBreak,\r\n\tstartShortBreak,\r\n\tstartPomodoro,\r\n} from \"../redux/actions\";\r\n\r\nimport Countdown from \"./countdown\";\r\n\r\nimport Button from \"./button\";\r\nimport styles from \"./countdown-animation.module.css\";\r\n\r\nfunction CountdownAnimation(props) {\r\n\tconsole.log(props.duration);\r\n\tconst dispatch = useDispatch();\r\n\tconst timerStore = useSelector((state) => state);\r\n\r\n\tconst handlePauseTimer = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(pausePomodoro());\r\n\t};\r\n\r\n\tconst handleResumeTimer = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(resumePomodoro());\r\n\t};\r\n\r\n\tconst handleStartPomodoro = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startPomodoro());\r\n\t};\r\n\r\n\tconst handleStartShortBreak = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startShortBreak());\r\n\t};\r\n\r\n\tconst handleStartLongBreak = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startLongBreak());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={styles.buttonWrapper}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tactiveClass={\r\n\t\t\t\t\t\ttimerStore.active === \"duration\" ? \"active\" : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttitle=\"Start Pomodoro\"\r\n\t\t\t\t\tcallback={handleStartPomodoro}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tactiveClass={\r\n\t\t\t\t\t\ttimerStore.active === \"shortBreak\" ? \"active\" : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttitle=\"Start Short Break\"\r\n\t\t\t\t\tcallback={handleStartShortBreak}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tactiveClass={\r\n\t\t\t\t\t\ttimerStore.active === \"longBreak\" ? \"active\" : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttitle=\"Start Long Break\"\r\n\t\t\t\t\tcallback={handleStartLongBreak}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles[\"countdown-wrapper\"]}>\r\n\t\t\t\t<Countdown\r\n\t\t\t\t\tkey={timerStore.activeDuration}\r\n\t\t\t\t\tduration={timerStore.activeDuration}\r\n\t\t\t\t\tanimate={timerStore.animate}\r\n\t\t\t\t></Countdown>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.buttonGroup}>\r\n\t\t\t\t<Button title=\"Pause Timer\" callback={handlePauseTimer} />\r\n\t\t\t\t<Button title=\"Resume Timer\" callback={handleResumeTimer} />\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default CountdownAnimation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst RandomQuote = () => {\r\n\tconst [quote, setQuote] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuote = async () => {\r\n\t\t\tconst response = await fetch(\"https://type.fit/api/quotes\");\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tconst randomIndex = Math.floor(Math.random() * data.length);\r\n\r\n\t\t\tsetQuote(data[randomIndex]);\r\n\t\t};\r\n\r\n\t\tgetQuote();\r\n\t}, []);\r\n\r\n\tconst randomQuote =\r\n\t\tquote !== null ? (\r\n\t\t\t<div>\r\n\t\t\t\t<p>{quote.text}</p>\r\n\t\t\t\t<small>- {quote.author}</small>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div></div>\r\n\t\t);\r\n\r\n\treturn randomQuote;\r\n};\r\n\r\nexport default RandomQuote;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Button from \"./button\";\r\nimport styles from \"./set-pomodoro.module.css\";\r\n\r\nimport { setTimerStore } from \"../redux/actions\";\r\n\r\nconst SetPomodoro = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst timerStore = useSelector((state) => state);\r\n\r\n\tconst [timer, setTimer] = useState(timerStore);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tswitch (name) {\r\n\t\t\tcase \"duration\":\r\n\t\t\t\tsetTimer({\r\n\t\t\t\t\t...timer,\r\n\t\t\t\t\tduration: parseInt(value),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortBreak\":\r\n\t\t\t\tsetTimer({\r\n\t\t\t\t\t...timer,\r\n\t\t\t\t\tshortBreak: parseInt(value),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"longBreak\":\r\n\t\t\t\tsetTimer({\r\n\t\t\t\t\t...timer,\r\n\t\t\t\t\tlongBreak: parseInt(value),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tprops.setShowSetTimer(false);\r\n\t\tdispatch(setTimerStore(timer));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className={styles[\"form-container\"]}>\r\n\t\t\t\t<div className={styles[\"input-wrapper\"]}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\tname=\"duration\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tdefaultValue={timer.duration}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\tname=\"shortBreak\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tdefaultValue={timer.shortBreak}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\tname=\"longBreak\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tdefaultValue={timer.longBreak}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button title=\"Set Timer\" callback={handleSubmit} />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SetPomodoro;\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"./components/button\";\r\n\r\nimport CountdownAnimation from \"./components/countdown-animation\";\r\nimport RandomQuote from \"./components/random-quote\";\r\nimport SetPomodoro from \"./components/set-pomodoro\";\r\n\r\nfunction App() {\r\n\tconst animate = useSelector((state) => state.animate);\r\n\tconst timer = useSelector((state) => state);\r\n\tconst [showSetTimer, setShowSetTimer] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h1>Foco</h1>\r\n\t\t\t<RandomQuote />\r\n\t\t\t{showSetTimer && <SetPomodoro setShowSetTimer={setShowSetTimer} />}\r\n\t\t\t{!showSetTimer && (\r\n\t\t\t\t<CountdownAnimation\r\n\t\t\t\t\tkey={1}\r\n\t\t\t\t\tduration={timer.activeDuration}\r\n\t\t\t\t\tanimate={animate}\r\n\t\t\t\t></CountdownAnimation>\r\n\t\t\t)}\r\n\t\t\t{!showSetTimer && (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tactiveClass=\"primary\"\r\n\t\t\t\t\ttitle=\"Edit Timer\"\r\n\t\t\t\t\tcallback={() => {\r\n\t\t\t\t\t\tsetShowSetTimer(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import \"./index.css\";\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countdown-wrapper\":\"countdown-animation_countdown-wrapper__2W1oN\",\"buttonWrapper\":\"countdown-animation_buttonWrapper__3050Y\",\"buttonGroup\":\"countdown-animation_buttonGroup__3d1NC\",\"primary\":\"countdown-animation_primary__1_sTn\",\"active\":\"countdown-animation_active__1I45w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"set-pomodoro_form-container__1x12M\",\"input-wrapper\":\"set-pomodoro_input-wrapper__3v0p4\",\"input\":\"set-pomodoro_input__2ykHA\"};"],"sourceRoot":""}